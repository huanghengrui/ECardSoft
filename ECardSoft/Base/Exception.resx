<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCmRXhpZgAASUkqAAgAAAAFABIBAwABAAAAAQAAADEBAgAVAAAA
        SgAAADIBAgAUAAAAYAAAABMCAwABAAAAAQAAAGmHBAABAAAAdAAAAAAAAABBQ0QgU3lzdGVtcyDK/cLr
        s8nP8QAAMjAxMToxMDowOSAxNTo1NToyMAADAJCSAgAEAAAANzE4AAKgBAABAAAAMAAAAAOgBAABAAAA
        MAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcp
        LDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAwADADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwD35mCqWYgADJJ7VwereOJrm5e00QIYwdpum7+u0f19qpfEjxOySroVtJgOu+4ZTyRz
        8uc9D3+lYeg6VqOqW8h09ECxrks5xn2FctSrJz9nA9/B4ClSw/1vFbPZGw11qUiB7jWrsNjHySlP5YrN
        uNY1q1Dm21m6Of777/55ritZ1bUrS+ktrkPFIhwVNXPDceq+Irv7Naxlv7znov1rk9pKUuVXufQPCUKN
        D21Rx5PRWPR/DXxEWe5j07V0Ec7ttSZW+VvQY7H6k559gfQVYMoZSCCMgjvXzh4hsrnTbhra9iKSDp6H
        6GvS/hX4sfWLCXS7yXfd2x3K7MMunGOOpPXJ+nU5NdWHrSbcJ7ngZtl1KEI4nDfAzzLxjqRm8b6w+cbb
        p4gP907f6VJ4a8b3XhvU1fmSzcjzY+49x7/zrP8AiFbNp/j7V4yGCyTmZSRjIf5v5kiofDHhu98UalHb
        26N5Wf3knQAd+a5OWftvd3Poo1MM8uSr/DZfl08z27U/Deh/EHTbe/jk2lsFZosZPqDUeq6pofwz0ARw
        Rq904xDAD80h9T6KPX+tWL7WtD+G2gWlrcMxJIVIYgN78/M2PQf55NVvFGhab8QvD8d1p88ckqKXt5l/
        l/8AW9q9B9eW3MfH0n70Pb83sb6f1+f4Hhura7e63fS31/MZJ5Dz6KOwA7AV0Hwmv5IPiNZQqAUuo5Yn
        z2whfI/FP1rj9UsrrSbyWzvI2imjOCCOvuK6n4O2/wBr+JVo/mbfstvNNjGd2V2Y9vv5z7e9cNBS9pru
        fU5rVpPBNQty20sejfF7wVNrmnxazpkPmX1opWWNBlpYuvHqV547gn0FeaeBviLL4SjuYZbY3ULIfKXd
        gq/bJ/u19M15r41+EGm+I7ibUdLmGnajIMsoTMMrYPJA5Uk4ywz0J2knNdtSk780Nz5rCY6n7P6viVeP
        TyPDdZ1291/U5dQ1GYyzyH8FHZQOwFbfgjx5c+ENRBYPPp7n97AGwc/3l9/51av/AIN+NbOdY4LO2vkK
        7jLb3KBQcn5T5m054z0xz1pbD4LeM77zfPgs7DZjb9puQd+c9PLD9Md8dRjPOOWNKopXW57lXHYOdH2c
        muXsc/4p8T3/AIx183UkXzyER29tCudoJ4UY5ZifzP5V7n8KPA83hTRprnUo1XU7xgzrz+6QD5U64JGW
        yQO55IwaPA/wn03wnc/b7qb7fqABVZGQBEByDtXsSCBnJ6cYyRXodddOnZ80tz5/G42NWKpUlaKP/9k=
</value>
  </data>
</root>